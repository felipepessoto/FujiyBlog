@using FujiyBlog.Core.EntityFramework
@model FujiyBlog.Core.DomainObjects.WidgetSetting
@{
    Layout = "Widget.cshtml";

    IDictionary<string, object> settings;
    if (Model.Settings == null)
    {
        settings = new Dictionary<string, object>() { { "Title", "Tag Cloud" }, { "MinimumPosts", 1 } };
    }
    else
    {
        settings = new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize<IDictionary<string, object>>(Model.Settings);
    }
    PostRepository postRepository = DependencyResolver.Current.GetService<PostRepository>();
    var tagCloud = postRepository.GetTagsCloud((int)settings["MinimumPosts"]);
    int minTag = tagCloud.Select(x=>x.PostsCount).DefaultIfEmpty().Min();
    int maxTag = tagCloud.Select(x => x.PostsCount).DefaultIfEmpty().Max();
    int distribution = (maxTag - minTag) / 3;
}
<h4>@Html.Raw(settings["Title"] as string)</h4>
<div class="content">


<ul>
    @foreach (var tag in tagCloud)
    {
        string cssClass;
        if (tag.PostsCount == minTag)
        {
            cssClass = "smallest";
        }
        else if (tag.PostsCount == maxTag)
        {
            cssClass = "biggest";
        }
        else if (tag.PostsCount > minTag + 2 * distribution)
        {
            cssClass = "big";
        }
        else if (tag.PostsCount > minTag + distribution)
        {
            cssClass = "medium";
        }
        else
        {
            cssClass = "small";
        }
         
        <li>@Html.ActionLink(tag.Tag.Name, MVC.Post.Tag(tag.Tag.Name, null), new{@class = cssClass})</li>    
    }    
    </ul>
</div>
