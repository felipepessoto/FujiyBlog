@using FujiyBlog.Core.DomainObjects
@using FujiyBlog.Core.Extensions
@using FujiyBlog.Web.Models
@using Microsoft.Web.Helpers
@model FujiyBlog.Core.DomainObjects.PostComment

@using (Ajax.BeginForm(MVC.Comment.ActionNames.DoComment, MVC.Comment.Name, new { id = Model.Post.Id }, new AjaxOptions { OnSuccess = "fujiyBlog.comments.addCommentSuccess(arguments[0]);" }))
{
    @Html.Hidden("ParentCommentId", Model.ParentComment != null ? Model.ParentComment.Id.ToString() : string.Empty)
    
    <div class="commentForm">
        <p class="addcomment">
            @Resources.Labels.AddComment</p><div style="display:none" id="replying-name">(Replying <span></span>) <a href="javascript:void(0)" onclick="javascript:fujiyBlog.comments.cancelReplyComment();">[X]</a></div>
            @if (!Request.IsAuthenticated)
            { 
        @Html.LabelFor(x => x.AuthorName)
        @Html.TextBoxFor(x => x.AuthorName, new{data_val="true", data_val_required="The Name field is required." })
        @Html.ValidationMessageFor(x => x.AuthorName)

        @Html.LabelFor(x => x.AuthorEmail)
        @Html.EditorFor(x => x.AuthorEmail)
        @Html.ValidationMessageFor(x => x.AuthorEmail)

        @Html.LabelFor(x => x.AuthorWebsite)
        @Html.EditorFor(x => x.AuthorWebsite)
        @Html.ValidationMessageFor(x => x.AuthorWebsite)
            }
        <div>
            @Html.LabelFor(x => x.Comment)
            @Html.TextAreaFor(x => x.Comment)
            @Html.ValidationMessageFor(x => x.Comment)
        </div>
        @if (Settings.SettingRepository.ReCaptchaEnabled && !User.IsInRole(Role.ModerateComments))
        {
            <div class="commentCaptcha">
                @ReCaptcha.GetHtml(Settings.SettingRepository.ReCaptchaPublicKey)
            </div>
        }
        <input type="submit" value="@Resources.Labels.SaveComment" />
    </div>
}
