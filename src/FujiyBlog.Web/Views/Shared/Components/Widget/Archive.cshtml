@using FujiyBlog.Core.Caching
@using FujiyBlog.Core.EntityFramework
@using Newtonsoft.Json.Linq

@inject PostRepository postRepository
@inject FujiyBlogDatabase db

@model FujiyBlog.Core.DomainObjects.WidgetSetting
@{
    Layout = "Widget.cshtml";

    JObject settings = JObject.Parse(Model.Settings ?? "{}");

    IEnumerable<Tuple<DateTime, int>> datesCount = CacheHelper.FromCacheOrExecute(db, () => postRepository.GetArchiveCountByMonth(settings.Value<bool?>("RecentDatesAtTop").GetValueOrDefault()), cacheItemPolicy: new Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions { AbsoluteExpiration = DateTimeOffset.Now.AddHours(1) }, condition: !User.Identity.IsAuthenticated);
    var years = datesCount.Select(x => x.Item1.Year).Distinct();
}
<h4>@Html.Raw(settings.Value<string>("Title") ?? "Archive")</h4>
<div class="content">
    <ul class="monthlist">
        @foreach (var year in years)
        {
            <li class="year">
                <a href="javascript:void(0);" onclick="$(this).next().toggle('fast')">@year</a>
                <ul style="display: none">
                    @foreach (var mes in datesCount.Where(x => x.Item1.Year == year))
                    {
                        <li>@Html.ActionLink(System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat.GetMonthName(mes.Item1.Month) + "(" + mes.Item2 + ")", "ArchiveDate", "Post", new { year = mes.Item1.Year, month = mes.Item1.Month })</li>
                    }
                </ul>
            </li>
        }
    </ul>
</div>
