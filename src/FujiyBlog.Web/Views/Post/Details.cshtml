@using FujiyBlog.Core.DomainObjects
@using FujiyBlog.Web.Models
@using FujiyBlog.Core.Extensions

@model FujiyBlog.Core.Dto.PostSummary

@{
    Layout = "_Layout";
}
@section OpenGraphTags
    {
    <meta property="og:title" content="@Model.Post.Title" />
    <meta property="og:type" content="article" />
    <meta property="og:url" content="@Url.Action("Details", "Post",new  { postSlug = Model.Post.Slug }, Context.Request.Scheme)" />
    <meta property="og:image" content="@(Model.Post.ImageUrl ?? settings.OpenGraphImageUrl)" />
    <meta property="og:description" content="@Model.Post.Description" />
}

@section TwitterCardsTags
    {
    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@settings.TwitterBlogAccount">
    <meta name="twitter:title" content="@Model.Post.Title">
    <meta name="twitter:description" content="@Model.Post.Description">
    <meta name="twitter:creator" content="">
    <meta name="twitter:image:src" content="@(Model.Post.ImageUrl ?? settings.OpenGraphImageUrl)">
    <meta name="twitter:domain" content="@Url.Action("Details", "Post",new  { postSlug = Model.Post.Slug }, Context.Request.Scheme)">
}


<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        @if (Model.PreviousPost != null)
        {
            <li class="breadcrumb-item"><a asp-controller="Post" asp-action="Details" asp-route-postSlug="@Model.PreviousPost.Slug">&#x3C;&#x3C; @Model.PreviousPost.Title</a></li>
        }
        @if (Model.NextPost != null)
        {
            <li class="breadcrumb-item"><a asp-controller="Post" asp-action="Details" asp-route-postSlug="@Model.NextPost.Slug">@Model.NextPost.Title &#x3E;&#x3E;</a></li>
        }
    </ol>
</nav>

@{Html.RenderPartial("Post", Model);}

<hr />

<div id="commentlist">
    <div id="comment-title" class="comment-title">
        @FujiyBlog.Web.Resources.Labels.Comments (@Model.Post.Comments.Count)
    </div>

    @if (Context.UserHasClaimPermission(PermissionClaims.CreateComments) && Model.Post.IsCommentEnabled && settings.EnableComments && (!settings.CloseCommentsAfterDays.HasValue || Model.Post.PublicationDate.AddDays(settings.CloseCommentsAfterDays.Value) >= DateTime.UtcNow))
    {
        Html.RenderPartial("~/Views/Comment/DoComment.cshtml", new PostComment { Post = Model.Post });
    }

    @{Html.RenderPartial("~/Views/Comment/Comments.cshtml", Model.Post.Comments.Where(x => x.ParentComment == null));}
</div>
