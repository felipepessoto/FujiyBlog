@using FujiyBlog.Core.DomainObjects
@using FujiyBlog.Web.Models
@using FujiyBlog.Core.Extensions

@model FujiyBlog.Core.Dto.PostSummary

@{
    Layout = "_Layout";
}
@section OpenGraphTags
{
    <meta property="og:title" content="@Model.Post.Title" />
    <meta property="og:type" content="article" />
    <meta property="og:url" content="@Url.Action("Details", "Post",new  { postSlug = Model.Post.Slug }, Context.Request.Scheme)" />
    <meta property="og:image" content="@(Model.Post.ImageUrl ?? settings.OpenGraphImageUrl)" />
    <meta property="og:description" content="@Model.Post.Description" />
}

@section TwitterCardsTags
{
    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@settings.TwitterBlogAccount">
    <meta name="twitter:title" content="@Model.Post.Title">
    <meta name="twitter:description" content="@Model.Post.Description">
    <meta name="twitter:creator" content="">
    <meta name="twitter:image:src" content="@(Model.Post.ImageUrl ?? settings.OpenGraphImageUrl)">
    <meta name="twitter:domain" content="@Url.Action("Details", "Post",new  { postSlug = Model.Post.Slug }, Context.Request.Scheme)">
}


<div id="postnavigation">
    @if (Model.PreviousPost != null)
    {
        @Html.ActionLink("<< " + Model.PreviousPost.Title, "Details", "Post", new { postSlug = Model.PreviousPost.Slug })
        if (Model.NextPost != null)
        {
            <text>|</text>
        }
    }
    @if (Model.NextPost != null)
    {
        @Html.ActionLink(Model.NextPost.Title + " >>", "Details", "Post", new { postSlug = Model.NextPost.Slug })
    }
</div>
@{Html.RenderPartial("Post", Model);}
<div id="commentlist">
    @if (Model.Post.Comments.Count > 0)
    {
        <h1 class="comment-title">
            @FujiyBlog.Web.Resources.Labels.Comments
        </h1>
    }
    @{Html.RenderPartial("../Comment/Comments", Model.Post.Comments.Where(x => x.ParentComment == null));}
</div>
@if (Context.UserHasClaimPermission(PermissionClaims.CreateComments) && Model.Post.IsCommentEnabled && settings.EnableComments && (!settings.CloseCommentsAfterDays.HasValue || Model.Post.PublicationDate.AddDays(settings.CloseCommentsAfterDays.Value) >= DateTime.UtcNow))
{
    Html.RenderPartial("../Comment/DoComment", new PostComment { Post = Model.Post });
}