// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
#pragma warning disable 1591, 3008, 3009, 0108
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static FujiyBlog.Web.Controllers.AccountController Account = new FujiyBlog.Web.Controllers.T4MVC_AccountController();
    public static FujiyBlog.Web.Controllers.CommentController Comment = new FujiyBlog.Web.Controllers.T4MVC_CommentController();
    public static FujiyBlog.Web.Controllers.ContactController Contact = new FujiyBlog.Web.Controllers.T4MVC_ContactController();
    public static FujiyBlog.Web.Controllers.FeedController Feed = new FujiyBlog.Web.Controllers.T4MVC_FeedController();
    public static FujiyBlog.Web.Controllers.JavaScriptController JavaScript = new FujiyBlog.Web.Controllers.T4MVC_JavaScriptController();
    public static FujiyBlog.Web.Controllers.PageController Page = new FujiyBlog.Web.Controllers.T4MVC_PageController();
    public static FujiyBlog.Web.Controllers.PostController Post = new FujiyBlog.Web.Controllers.T4MVC_PostController();
    public static FujiyBlog.Web.Controllers.SearchController Search = new FujiyBlog.Web.Controllers.T4MVC_SearchController();
    public static FujiyBlog.Web.Controllers.SocialController Social = new FujiyBlog.Web.Controllers.T4MVC_SocialController();
    public static FujiyBlog.Web.Controllers.WidgetController Widget = new FujiyBlog.Web.Controllers.T4MVC_WidgetController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
    public static T4MVC.ThemesController Themes = new T4MVC.ThemesController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public FujiyBlog.Web.Areas.Admin.Controllers.CommentController Comment = new FujiyBlog.Web.Areas.Admin.Controllers.T4MVC_CommentController();
        public FujiyBlog.Web.Areas.Admin.Controllers.FileController File = new FujiyBlog.Web.Areas.Admin.Controllers.T4MVC_FileController();
        public FujiyBlog.Web.Areas.Admin.Controllers.PageController Page = new FujiyBlog.Web.Areas.Admin.Controllers.T4MVC_PageController();
        public FujiyBlog.Web.Areas.Admin.Controllers.PostController Post = new FujiyBlog.Web.Areas.Admin.Controllers.T4MVC_PostController();
        public FujiyBlog.Web.Areas.Admin.Controllers.SettingController Setting = new FujiyBlog.Web.Areas.Admin.Controllers.T4MVC_SettingController();
        public FujiyBlog.Web.Areas.Admin.Controllers.UserController User = new FujiyBlog.Web.Areas.Admin.Controllers.T4MVC_UserController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string fujiyblog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fujiyblog.min.js") ? Url("fujiyblog.min.js") : Url("fujiyblog.js");
        public static readonly string jquery_1_11_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.2.intellisense.min.js") ? Url("jquery-1.11.2.intellisense.min.js") : Url("jquery-1.11.2.intellisense.js");
        public static readonly string jquery_1_11_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.2.min.js") ? Url("jquery-1.11.2.min.js") : Url("jquery-1.11.2.js");
        public static readonly string jquery_1_11_2_min_js = Url("jquery-1.11.2.min.js");
        public static readonly string jquery_1_11_2_min_map = Url("jquery-1.11.2.min.map");
        public static readonly string jquery_ui_1_11_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.11.4.min.js") ? Url("jquery-ui-1.11.4.min.js") : Url("jquery-ui-1.11.4.js");
        public static readonly string jquery_ui_1_11_4_min_js = Url("jquery-ui-1.11.4.min.js");
        public static readonly string jquery_ui_timepicker_addon_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-timepicker-addon.min.js") ? Url("jquery-ui-timepicker-addon.min.js") : Url("jquery-ui-timepicker-addon.js");
        public static readonly string jquery_form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.form.min.js") ? Url("jquery.form.min.js") : Url("jquery.form.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string json2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json2.min.js") ? Url("json2.min.js") : Url("json2.js");
        public static readonly string openid_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/openid-jquery.min.js") ? Url("openid-jquery.min.js") : Url("openid-jquery.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class tinymce {
            private const string URLPATH = "~/Scripts/tinymce";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_tinymce_min_js = Url("jquery.tinymce.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class langs {
                private const string URLPATH = "~/Scripts/tinymce/langs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string readme_md = Url("readme.md");
            }
        
            public static readonly string license_txt = Url("license.txt");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/tinymce/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advlist {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/advlist";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class anchor {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/anchor";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autolink {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/autolink";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autoresize {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/autoresize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autosave {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/autosave";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bbcode {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/bbcode";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class charmap {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/charmap";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class code {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/code";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class colorpicker {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/colorpicker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class compat3x {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/compat3x";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Scripts/tinymce/plugins/compat3x/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                             
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/tinymce/plugins/compat3x/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string buttons_png = Url("buttons.png");
                        public static readonly string icons_gif = Url("icons.gif");
                        public static readonly string items_gif = Url("items.gif");
                        public static readonly string menu_arrow_gif = Url("menu_arrow.gif");
                        public static readonly string menu_check_gif = Url("menu_check.gif");
                        public static readonly string progress_gif = Url("progress.gif");
                        public static readonly string tabs_gif = Url("tabs.gif");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                    public static readonly string tiny_mce_popup_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiny_mce_popup.min.js") ? Url("tiny_mce_popup.min.js") : Url("tiny_mce_popup.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class utils {
                        private const string URLPATH = "~/Scripts/tinymce/plugins/compat3x/utils";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string editable_selects_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editable_selects.min.js") ? Url("editable_selects.min.js") : Url("editable_selects.js");
                        public static readonly string form_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form_utils.min.js") ? Url("form_utils.min.js") : Url("form_utils.js");
                        public static readonly string mctabs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mctabs.min.js") ? Url("mctabs.min.js") : Url("mctabs.js");
                        public static readonly string validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validate.min.js") ? Url("validate.min.js") : Url("validate.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class contextmenu {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/contextmenu";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class directionality {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/directionality";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class emoticons {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/emoticons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/tinymce/plugins/emoticons/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string smiley_cool_gif = Url("smiley-cool.gif");
                        public static readonly string smiley_cry_gif = Url("smiley-cry.gif");
                        public static readonly string smiley_embarassed_gif = Url("smiley-embarassed.gif");
                        public static readonly string smiley_foot_in_mouth_gif = Url("smiley-foot-in-mouth.gif");
                        public static readonly string smiley_frown_gif = Url("smiley-frown.gif");
                        public static readonly string smiley_innocent_gif = Url("smiley-innocent.gif");
                        public static readonly string smiley_kiss_gif = Url("smiley-kiss.gif");
                        public static readonly string smiley_laughing_gif = Url("smiley-laughing.gif");
                        public static readonly string smiley_money_mouth_gif = Url("smiley-money-mouth.gif");
                        public static readonly string smiley_sealed_gif = Url("smiley-sealed.gif");
                        public static readonly string smiley_smile_gif = Url("smiley-smile.gif");
                        public static readonly string smiley_surprised_gif = Url("smiley-surprised.gif");
                        public static readonly string smiley_tongue_out_gif = Url("smiley-tongue-out.gif");
                        public static readonly string smiley_undecided_gif = Url("smiley-undecided.gif");
                        public static readonly string smiley_wink_gif = Url("smiley-wink.gif");
                        public static readonly string smiley_yell_gif = Url("smiley-yell.gif");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class example {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/example";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_html = Url("dialog.html");
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class example_dependency {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/example_dependency";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fullpage {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/fullpage";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fullscreen {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/fullscreen";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class hr {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/hr";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class image {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/image";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class importcss {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/importcss";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class insertdatetime {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/insertdatetime";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class layer {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/layer";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class legacyoutput {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/legacyoutput";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class link {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/link";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lists {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/lists";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class media {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/media";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string moxieplayer_swf = Url("moxieplayer.swf");
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class nonbreaking {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/nonbreaking";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class noneditable {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/noneditable";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class paste {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/paste";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class print {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/print";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class save {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/save";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class searchreplace {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/searchreplace";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class spellchecker {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/spellchecker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabfocus {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/tabfocus";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class template {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/template";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class textcolor {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/textcolor";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class textpattern {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/textpattern";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class visualblocks {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/visualblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Scripts/tinymce/plugins/visualblocks/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string visualblocks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/visualblocks.min.css") ? Url("visualblocks.min.css") : Url("visualblocks.css");
                             
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/tinymce/plugins/visualblocks/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string address_gif = Url("address.gif");
                        public static readonly string article_gif = Url("article.gif");
                        public static readonly string aside_gif = Url("aside.gif");
                        public static readonly string blockquote_gif = Url("blockquote.gif");
                        public static readonly string div_gif = Url("div.gif");
                        public static readonly string dl_gif = Url("dl.gif");
                        public static readonly string figure_gif = Url("figure.gif");
                        public static readonly string h1_gif = Url("h1.gif");
                        public static readonly string h2_gif = Url("h2.gif");
                        public static readonly string h3_gif = Url("h3.gif");
                        public static readonly string h4_gif = Url("h4.gif");
                        public static readonly string h5_gif = Url("h5.gif");
                        public static readonly string h6_gif = Url("h6.gif");
                        public static readonly string hgroup_gif = Url("hgroup.gif");
                        public static readonly string ol_gif = Url("ol.gif");
                        public static readonly string p_gif = Url("p.gif");
                        public static readonly string pre_gif = Url("pre.gif");
                        public static readonly string section_gif = Url("section.gif");
                        public static readonly string ul_gif = Url("ul.gif");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class visualchars {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/visualchars";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wordcount {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/wordcount";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skins {
                private const string URLPATH = "~/Scripts/tinymce/skins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lightgray {
                    private const string URLPATH = "~/Scripts/tinymce/skins/lightgray";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string content_inline_min_css = Url("content.inline.min.css");
                    public static readonly string content_min_css = Url("content.min.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class fonts {
                        private const string URLPATH = "~/Scripts/tinymce/skins/lightgray/fonts";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string readme_md = Url("readme.md");
                        public static readonly string tinymce_small_eot = Url("tinymce-small.eot");
                        public static readonly string tinymce_small_json = Url("tinymce-small.json");
                        public static readonly string tinymce_small_svg = Url("tinymce-small.svg");
                        public static readonly string tinymce_small_ttf = Url("tinymce-small.ttf");
                        public static readonly string tinymce_small_woff = Url("tinymce-small.woff");
                        public static readonly string tinymce_eot = Url("tinymce.eot");
                        public static readonly string tinymce_json = Url("tinymce.json");
                        public static readonly string tinymce_svg = Url("tinymce.svg");
                        public static readonly string tinymce_ttf = Url("tinymce.ttf");
                        public static readonly string tinymce_woff = Url("tinymce.woff");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/tinymce/skins/lightgray/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_gif = Url("anchor.gif");
                        public static readonly string loader_gif = Url("loader.gif");
                        public static readonly string object_gif = Url("object.gif");
                        public static readonly string trans_gif = Url("trans.gif");
                    }
                
                    public static readonly string skin_ie7_min_css = Url("skin.ie7.min.css");
                    public static readonly string skin_min_css = Url("skin.min.css");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/Scripts/tinymce/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class modern {
                    private const string URLPATH = "~/Scripts/tinymce/themes/modern";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string theme_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.js") ? Url("theme.min.js") : Url("theme.js");
                    public static readonly string theme_min_js = Url("theme.min.js");
                }
            
            }
        
            public static readonly string tinymce_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tinymce.min.js") ? Url("tinymce.min.js") : Url("tinymce.js");
            public static readonly string tinymce_min_js = Url("tinymce.min.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Admin {
            private const string URLPATH = "~/Content/Admin";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            private const string URLPATH = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string facebook_share_png = Url("facebook_share.png");
            public static readonly string googleplus_png = Url("googleplus.png");
            public static readonly string tweet_png = Url("tweet.png");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class openid {
            private const string URLPATH = "~/Content/openid";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                private const string URLPATH = "~/Content/openid/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string openid_inputicon_gif = Url("openid-inputicon.gif");
                public static readonly string openid_providers_en_png = Url("openid-providers-en.png");
            }
        
            public static readonly string openid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/openid.min.css") ? Url("openid.min.css") : Url("openid.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Themes {
            private const string URLPATH = "~/Content/Themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/Themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                     
                public static readonly string all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/all.min.css") ? Url("all.min.css") : Url("all.css");
                     
                public static readonly string autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autocomplete.min.css") ? Url("autocomplete.min.css") : Url("autocomplete.css");
                     
                public static readonly string base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/base.min.css") ? Url("base.min.css") : Url("base.css");
                     
                public static readonly string button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.css") ? Url("button.min.css") : Url("button.css");
                     
                public static readonly string core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.css") ? Url("core.min.css") : Url("core.css");
                     
                public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
                     
                public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                     
                public static readonly string draggable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/draggable.min.css") ? Url("draggable.min.css") : Url("draggable.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/Themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                     
                public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                     
                public static readonly string resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/resizable.min.css") ? Url("resizable.min.css") : Url("resizable.css");
                     
                public static readonly string selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectable.min.css") ? Url("selectable.min.css") : Url("selectable.css");
                     
                public static readonly string selectmenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectmenu.min.css") ? Url("selectmenu.min.css") : Url("selectmenu.css");
                     
                public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                     
                public static readonly string sortable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sortable.min.css") ? Url("sortable.min.css") : Url("sortable.css");
                     
                public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                     
                public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                     
                public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.css") ? Url("theme.min.css") : Url("theme.css");
                     
                public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Default {
                private const string URLPATH = "~/Content/Themes/Default";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class img {
                    private const string URLPATH = "~/Content/Themes/Default/img";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string header_background_jpg = Url("header_background.jpg");
                    public static readonly string reply_arrow_gif = Url("reply-arrow.gif");
                }
            
                public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
                     
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class tinymce 
            {
                public static partial class langs 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class plugins 
                {
                    public static partial class advlist 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/advlist/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/advlist/plugin.min.js"; 
                        }
                    }
                    public static partial class anchor 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/anchor/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/anchor/plugin.min.js"; 
                        }
                    }
                    public static partial class autolink 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/autolink/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/autolink/plugin.min.js"; 
                        }
                    }
                    public static partial class autoresize 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/autoresize/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/autoresize/plugin.min.js"; 
                        }
                    }
                    public static partial class autosave 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/autosave/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/autosave/plugin.min.js"; 
                        }
                    }
                    public static partial class bbcode 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/bbcode/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/bbcode/plugin.min.js"; 
                        }
                    }
                    public static partial class charmap 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/charmap/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/charmap/plugin.min.js"; 
                        }
                    }
                    public static partial class code 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/code/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/code/plugin.min.js"; 
                        }
                    }
                    public static partial class colorpicker 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/colorpicker/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/colorpicker/plugin.min.js"; 
                        }
                    }
                    public static partial class compat3x 
                    {
                        public static partial class css 
                        {
                            public static class Assets
                            {
                                public const string dialog_css = "~/Scripts/tinymce/plugins/compat3x/css/dialog.css";
                            }
                        }
                        public static partial class img 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class utils 
                        {
                            public static class Assets
                            {
                                public const string editable_selects_js = "~/Scripts/tinymce/plugins/compat3x/utils/editable_selects.js"; 
                                public const string form_utils_js = "~/Scripts/tinymce/plugins/compat3x/utils/form_utils.js"; 
                                public const string mctabs_js = "~/Scripts/tinymce/plugins/compat3x/utils/mctabs.js"; 
                                public const string validate_js = "~/Scripts/tinymce/plugins/compat3x/utils/validate.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/compat3x/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/compat3x/plugin.min.js"; 
                            public const string tiny_mce_popup_js = "~/Scripts/tinymce/plugins/compat3x/tiny_mce_popup.js"; 
                        }
                    }
                    public static partial class contextmenu 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/contextmenu/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/contextmenu/plugin.min.js"; 
                        }
                    }
                    public static partial class directionality 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/directionality/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/directionality/plugin.min.js"; 
                        }
                    }
                    public static partial class emoticons 
                    {
                        public static partial class img 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/emoticons/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/emoticons/plugin.min.js"; 
                        }
                    }
                    public static partial class example 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/example/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/example/plugin.min.js"; 
                        }
                    }
                    public static partial class example_dependency 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/example_dependency/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/example_dependency/plugin.min.js"; 
                        }
                    }
                    public static partial class fullpage 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/fullpage/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/fullpage/plugin.min.js"; 
                        }
                    }
                    public static partial class fullscreen 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/fullscreen/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/fullscreen/plugin.min.js"; 
                        }
                    }
                    public static partial class hr 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/hr/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/hr/plugin.min.js"; 
                        }
                    }
                    public static partial class image 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/image/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/image/plugin.min.js"; 
                        }
                    }
                    public static partial class importcss 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/importcss/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/importcss/plugin.min.js"; 
                        }
                    }
                    public static partial class insertdatetime 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/insertdatetime/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/insertdatetime/plugin.min.js"; 
                        }
                    }
                    public static partial class layer 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/layer/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/layer/plugin.min.js"; 
                        }
                    }
                    public static partial class legacyoutput 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/legacyoutput/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/legacyoutput/plugin.min.js"; 
                        }
                    }
                    public static partial class link 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/link/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/link/plugin.min.js"; 
                        }
                    }
                    public static partial class lists 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/lists/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/lists/plugin.min.js"; 
                        }
                    }
                    public static partial class media 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/media/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/media/plugin.min.js"; 
                        }
                    }
                    public static partial class nonbreaking 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/nonbreaking/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/nonbreaking/plugin.min.js"; 
                        }
                    }
                    public static partial class noneditable 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/noneditable/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/noneditable/plugin.min.js"; 
                        }
                    }
                    public static partial class pagebreak 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/pagebreak/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/pagebreak/plugin.min.js"; 
                        }
                    }
                    public static partial class paste 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/paste/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/paste/plugin.min.js"; 
                        }
                    }
                    public static partial class preview 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/preview/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/preview/plugin.min.js"; 
                        }
                    }
                    public static partial class print 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/print/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/print/plugin.min.js"; 
                        }
                    }
                    public static partial class save 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/save/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/save/plugin.min.js"; 
                        }
                    }
                    public static partial class searchreplace 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/searchreplace/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/searchreplace/plugin.min.js"; 
                        }
                    }
                    public static partial class spellchecker 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/spellchecker/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/spellchecker/plugin.min.js"; 
                        }
                    }
                    public static partial class tabfocus 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/tabfocus/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/tabfocus/plugin.min.js"; 
                        }
                    }
                    public static partial class table 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/table/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/table/plugin.min.js"; 
                        }
                    }
                    public static partial class template 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/template/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/template/plugin.min.js"; 
                        }
                    }
                    public static partial class textcolor 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/textcolor/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/textcolor/plugin.min.js"; 
                        }
                    }
                    public static partial class textpattern 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/textpattern/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/textpattern/plugin.min.js"; 
                        }
                    }
                    public static partial class visualblocks 
                    {
                        public static partial class css 
                        {
                            public static class Assets
                            {
                                public const string visualblocks_css = "~/Scripts/tinymce/plugins/visualblocks/css/visualblocks.css";
                            }
                        }
                        public static partial class img 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/visualblocks/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/visualblocks/plugin.min.js"; 
                        }
                    }
                    public static partial class visualchars 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/visualchars/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/visualchars/plugin.min.js"; 
                        }
                    }
                    public static partial class wordcount 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/tinymce/plugins/wordcount/plugin.js"; 
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/wordcount/plugin.min.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class skins 
                {
                    public static partial class lightgray 
                    {
                        public static partial class fonts 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class img 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string content_inline_min_css = "~/Scripts/tinymce/skins/lightgray/content.inline.min.css";
                            public const string content_min_css = "~/Scripts/tinymce/skins/lightgray/content.min.css";
                            public const string skin_ie7_min_css = "~/Scripts/tinymce/skins/lightgray/skin.ie7.min.css";
                            public const string skin_min_css = "~/Scripts/tinymce/skins/lightgray/skin.min.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class themes 
                {
                    public static partial class modern 
                    {
                        public static class Assets
                        {
                            public const string theme_js = "~/Scripts/tinymce/themes/modern/theme.js"; 
                            public const string theme_min_js = "~/Scripts/tinymce/themes/modern/theme.min.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string jquery_tinymce_min_js = "~/Scripts/tinymce/jquery.tinymce.min.js"; 
                    public const string tinymce_js = "~/Scripts/tinymce/tinymce.js"; 
                    public const string tinymce_min_js = "~/Scripts/tinymce/tinymce.min.js"; 
                }
            }
            public static class Assets
            {
                public const string fujiyblog_js = "~/Scripts/fujiyblog.js"; 
                public const string jquery_1_11_2_intellisense_js = "~/Scripts/jquery-1.11.2.intellisense.js"; 
                public const string jquery_1_11_2_js = "~/Scripts/jquery-1.11.2.js"; 
                public const string jquery_1_11_2_min_js = "~/Scripts/jquery-1.11.2.min.js"; 
                public const string jquery_ui_1_11_4_js = "~/Scripts/jquery-ui-1.11.4.js"; 
                public const string jquery_ui_1_11_4_min_js = "~/Scripts/jquery-ui-1.11.4.min.js"; 
                public const string jquery_ui_timepicker_addon_js = "~/Scripts/jquery-ui-timepicker-addon.js"; 
                public const string jquery_form_js = "~/Scripts/jquery.form.js"; 
                public const string jquery_unobtrusive_ajax_js = "~/Scripts/jquery.unobtrusive-ajax.js"; 
                public const string jquery_unobtrusive_ajax_min_js = "~/Scripts/jquery.unobtrusive-ajax.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string json2_js = "~/Scripts/json2.js"; 
                public const string openid_jquery_js = "~/Scripts/openid-jquery.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class Admin 
            {
                public static class Assets
                {
                    public const string Site_css = "~/Content/Admin/Site.css";
                }
            }
            public static partial class Images 
            {
                public static class Assets
                {
                }
            }
            public static partial class openid 
            {
                public static partial class images 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string openid_css = "~/Content/openid/openid.css";
                }
            }
            public static partial class Themes 
            {
                public static partial class @base 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string accordion_css = "~/Content/Themes/base/accordion.css";
                        public const string all_css = "~/Content/Themes/base/all.css";
                        public const string autocomplete_css = "~/Content/Themes/base/autocomplete.css";
                        public const string base_css = "~/Content/Themes/base/base.css";
                        public const string button_css = "~/Content/Themes/base/button.css";
                        public const string core_css = "~/Content/Themes/base/core.css";
                        public const string datepicker_css = "~/Content/Themes/base/datepicker.css";
                        public const string dialog_css = "~/Content/Themes/base/dialog.css";
                        public const string draggable_css = "~/Content/Themes/base/draggable.css";
                        public const string menu_css = "~/Content/Themes/base/menu.css";
                        public const string progressbar_css = "~/Content/Themes/base/progressbar.css";
                        public const string resizable_css = "~/Content/Themes/base/resizable.css";
                        public const string selectable_css = "~/Content/Themes/base/selectable.css";
                        public const string selectmenu_css = "~/Content/Themes/base/selectmenu.css";
                        public const string slider_css = "~/Content/Themes/base/slider.css";
                        public const string sortable_css = "~/Content/Themes/base/sortable.css";
                        public const string spinner_css = "~/Content/Themes/base/spinner.css";
                        public const string tabs_css = "~/Content/Themes/base/tabs.css";
                        public const string theme_css = "~/Content/Themes/base/theme.css";
                        public const string tooltip_css = "~/Content/Themes/base/tooltip.css";
                    }
                }
                public static partial class Default 
                {
                    public static partial class img 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string Site_css = "~/Content/Themes/Default/Site.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108


