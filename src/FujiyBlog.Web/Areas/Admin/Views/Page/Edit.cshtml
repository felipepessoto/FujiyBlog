@using FujiyBlog.Core.DomainObjects
@using FujiyBlog.Web.Extensions
@using FujiyBlog.Core.Extensions

@model FujiyBlog.Web.Areas.Admin.ViewModels.AdminPageSave

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Edit";
    string uploadFolder = "Page" + (Model.Id.HasValue ? Model.Id.ToString() : Guid.NewGuid().ToString());
}
<script type="text/javascript" src="~/lib/tinymce/jquery.tinymce.min.js"></script>

@Html.Partial("UploadForms", uploadFolder)

@using (Html.BeginForm())
{
    <button class="btn btn-primary" type="submit">Save</button>
    <h2>@(Model.Id.HasValue ? "Edit" : "Add") page</h2>

    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)

    <div class="row">
        <div class="col-xs-9">

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" placeholder="Title" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Slug" class="control-label"></label>
                <div class="input-group">
                    <input asp-for="Slug" class="form-control" placeholder="Slug" />
                    <span class="input-group-btn">
                        <a class="btn btn-primary" href="javascript:void(0)" id="extract-from-title">Extract from title</a>
                    </span>
                    <span asp-validation-for="Slug" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-1">
                    <a class="btn btn-default" href="javascript:void(0)" id="link-upload-image">Insert image</a>
                </div>
                <div class="col-xs-1">
                    <a class="btn btn-default" href="javascript:void(0)" id="link-upload-video">Insert video</a>
                </div>
                <div class="col-xs-1">
                    <a class="btn btn-default" href="javascript:void(0)" id="link-upload-file">Insert file</a>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12">
                    @Html.EditorFor(model => model.Content, "TinyMCE")
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label> (Optional)
                <textarea asp-for="Description" class="form-control" maxlength="500"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
                <div id="textarea_feedback"></div>
            </div>


            <div class="checkbox">
                <label>
                    <input asp-for="IsPublished" />@Html.DisplayNameFor(model => model.IsPublished)
                </label>
                <span asp-validation-for="IsPublished" class="text-danger"></span>
            </div>

            <div class="checkbox">
                <label>
                    <input asp-for="IsFrontPage" />@Html.DisplayNameFor(model => model.IsFrontPage)
                </label>
                <span asp-validation-for="IsFrontPage" class="text-danger"></span>
            </div>

            <div class="checkbox">
                <label>
                    <input asp-for="ShowInList" />@Html.DisplayNameFor(model => model.ShowInList)
                </label>
                <span asp-validation-for="ShowInList" class="text-danger"></span>
            </div>

            <button class="btn btn-primary" type="submit">Save</button>

        </div>

        <div class="col-xs-3">

            <div class="form-group">
                <label asp-for="AuthorId" class="control-label"></label>
                <select asp-for="AuthorId" asp-items="Model.Authors" class="form-control"></select>
                <span asp-validation-for="AuthorId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PublicationDate" class="control-label"></label>
                <div class='input-group'>
                    <input asp-for="PublicationDate" asp-format="{0:yyyy/MM/dd HH:mm}" class="form-control datetime-picker" placeholder="Title" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                <span asp-validation-for="PublicationDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Keywords" class="control-label"></label>
                <textarea asp-for="Keywords" class="form-control"></textarea>
                <span asp-validation-for="Keywords" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ParentId" class="control-label"></label>
                <select asp-for="ParentId" asp-items="Model.Pages" class="form-control">
                    <option value="">Select</option>
                </select>
                <span asp-validation-for="ParentId" class="text-danger"></span>
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    function CheckPublishRoles () {

        var hasPublishOwn = @(Context.UserHasClaimPermission(PermissionClaims.PublishOwnPages)?"true":"false");;
        var hasPublishOtherUsers = @(Context.UserHasClaimPermission(PermissionClaims.PublishOtherUsersPages)?"true":"false");
        var userName = '@(User.Identity.Name)';
        var currentPublishedValue = @(Model.Id.HasValue && Model.IsPublished ? "true" : "false");

        var publishedField = $('#@(Html.IdFor(x=> x.IsPublished))');
        var newAuthor = $('#@(Html.IdFor(x=> x.AuthorId)) :selected').text();

        if (!currentPublishedValue) {
            if (!(newAuthor != userName && hasPublishOtherUsers) && !(newAuthor == userName && hasPublishOwn)) {
                publishedField.attr('disabled', true);
                publishedField.prop('checked', false);
            }
            else {
                publishedField.attr('disabled', false);
            }
        }
    }

    CheckPublishRoles();

    $('#@(Html.IdFor(x=> x.AuthorId))').change(CheckPublishRoles);

    $('#extract-from-title').click(function() {
        var callUrl = '@(Url.Action("GenerateSlug", "Page"))';

        $.ajax({
            type: "POST",
            url: callUrl,
            data: { text: $('#@Html.IdFor(x=>x.Title)').val() },
            success: function(response) {
                $('#@Html.IdFor(x=>x.Slug)').val(response);
            },
            error: function() {
                alert('Error');
            }
        });
    });

</script>