@inject FujiyBlog.Core.DateTimeUtil DateTimeUtil

@model FujiyBlog.Web.Areas.Admin.ViewModels.AdminCommentIndex
@{
    ViewBag.Title = FujiyBlog.Web.Resources.Labels.Comments;
    Layout = "_Layout";
}
<h2>
    @FujiyBlog.Web.Resources.Labels.Comments
</h2>
@await Component.InvokeAsync("Pager", new { currentPage = Model.CurrentPage, totalPages = Model.TotalPages, nextPageText = FujiyBlog.Web.Resources.Labels.NextPosts, previousPageText = FujiyBlog.Web.Resources.Labels.PreviousPosts })
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                <input type="checkbox" id="check-all-items" />
            </th>
            <th>
                @Html.LabelFor(x => x.Comments.FirstOrDefault().AuthorName)
            </th>
            <th>
                @Html.LabelFor(x => x.Comments.FirstOrDefault().AuthorEmail)
            </th>
            <th>
                @Html.LabelFor(x => x.Comments.FirstOrDefault().AuthorWebsite)
            </th>
            <th>
                @Html.LabelFor(x => x.Comments.FirstOrDefault().Comment)
            </th>
            <th>
                @Html.LabelFor(x => x.Comments.FirstOrDefault().IpAddress)
            </th>
            @*<th>
                    @Html.LabelFor(x => x.Comments.FirstOrDefault().Avatar)
                </th>*@
            <th>
                @Html.LabelFor(x => x.Comments.FirstOrDefault().CreationDate)
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Comments)
        {
            <tr id="item-row-@item.Id">
                <td>
                    <input type="checkbox" class="check-item" id="check-item@(item.Id)" value="@item.Id" />
                </td>
                <td>
                    @if (item.Author == null)
                {
                        @Html.DisplayFor(modelItem => item.AuthorName)
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Author.DisplayName)
                    }
                </td>
                <td>
                    @if (item.Author == null)
                {
                        @Html.DisplayFor(modelItem => item.AuthorEmail)
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Author.Email)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AuthorWebsite)
                </td>
                <td>
                    @Html.Raw(item.Comment.Substring(0, Math.Min(item.Comment.Length, 100)))
                    @if (item.Comment.Length > 100)
                { <text>...</text>}
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IpAddress)
                </td>
                @*            <td>
                        @Html.DisplayFor(modelItem => item.Avatar)
                    </td>*@
                <td>
                    @DateTimeUtil.ConvertUtcToMyTimeZone(item.CreationDate)
                </td>
                <td>
                    <a asp-area="" asp-controller="Post" asp-action="Details" asp-route-postSlug="@item.Post.Slug" asp-fragment="@("comment_id-" + item.Id)" class="btn btn-secondary">View</a>
                </td>
                <td>
                    <a asp-area="Admin" asp-controller="Comment" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-secondary">Edit</a>
                </td>
                <td>
                    <a asp-area="Admin" asp-controller="Comment" asp-action="Delete" asp-route-id="@item.Id" data-ajax="true" data-ajax-method="POST" data-ajax-confirm="Sure?" data-ajax-success="@("RemoveItemRow(" + item.Id + ");")" class="btn btn-secondary">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (ViewContext.ActionDescriptor.RouteValues["action"] == "Index")
{
    <a href="javascript:void(0);" id="approve-comments" class="btn btn-primary">Approve Selected</a>
}
else
{
    <a href="javascript:void(0);" id="disapprove-comments" class="btn btn-warning">Disapprove Selected</a>
}
<a href="javascript:void(0);" id="delete-comments" class="btn btn-danger">Delete Selected</a>
@await Component.InvokeAsync("Pager", new { currentPage = Model.CurrentPage, totalPages = Model.TotalPages, nextPageText = FujiyBlog.Web.Resources.Labels.NextPosts, previousPageText = FujiyBlog.Web.Resources.Labels.PreviousPosts })
<script type="text/javascript">

    $('#check-all-items').click(function () {
        $('.check-item').attr('checked', this.checked)
    });

    function RemoveItemRow(itemId) {
        $('#item-row-' + itemId).hide();
    }

    function GetSelectedItems() {

        var values = new Array();

        $('.check-item:checked').each(function () {
            values.push($(this).val());
        });

        return values;
    }

    function SendCommentStatusChange(callUrl) {

        var ids = GetSelectedItems();

        $.ajax({
            type: "POST",
            url: callUrl,
            data: { selectedComments: ids },
            success: function (response) {
                var len = ids.length;
                for (var i = 0; i < len; i++) {
                    RemoveItemRow(ids[i]);
                }
            },
            error: function () {
                alert('Error');
            }
        });
    }

    $('#approve-comments').click(function () {
        SendCommentStatusChange('@Url.Action("ApproveSelected", "Comment")');
    });

    $('#disapprove-comments').click(function () {
        SendCommentStatusChange('@Url.Action("DisapproveSelected", "Comment")');
    });

    $('#delete-comments').click(function () {
        SendCommentStatusChange('@Url.Action("DeleteSelected", "Comment")');
    });

</script>
