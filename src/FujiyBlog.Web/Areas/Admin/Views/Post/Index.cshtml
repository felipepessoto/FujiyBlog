@using FujiyBlog.Core.DomainObjects
@using FujiyBlog.Core.Extensions

@inject FujiyBlog.Core.DateTimeUtil DateTimeUtil

@model FujiyBlog.Web.Areas.Admin.ViewModels.AdminPostIndex

@{
    Layout = "_Layout";
    ViewBag.Title = "Posts";
}

<h2>Posts</h2>

@if (Context.UserHasClaimPermission(PermissionClaims.CreateNewPosts))
{
    <p>
        <a asp-area="Admin" asp-controller="Post" asp-action="Edit" class="btn btn-default">Write new post</a>
    </p>
}

<ul class="nav nav-pills">

    <li class="@(Model.Published == null ? "active": null)">@Html.ActionLink("All", "Index", "Post", new { area = "Admin" })</li>
    <li class="@(Model.Published == false ? "active": null)">@Html.ActionLink("Drafts", "Index", "Post", new { published = false, Area = "Admin" })</li>
    <li class="@(Model.Published == true ? "active": null)">@Html.ActionLink("Published", "Index", "Post", new { published = true, Area = "Admin" })</li>
</ul>

@await Component.InvokeAsync("Pager", new { currentPage = Model.CurrentPage, totalPages = Model.TotalPages, nextPageText = FujiyBlog.Web.Resources.Labels.NextPosts, previousPageText = FujiyBlog.Web.Resources.Labels.PreviousPosts })

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                Published
            </th>
            <th>
                Title
            </th>
            <th>
                Author
            </th>
            <th>
                Categories
            </th>
            <th>
                Tags
            </th>
            <th>
                CreationDate
            </th>
            <th>
                PublicationDate
            </th>
            <th>
                Comments
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.RecentPosts)
            {
            <tr id="item-row-@item.Post.Id" class="@(item.Post.IsPublished ? "" : "warning")">
                <td>
                    @Html.DisplayFor(modelItem => item.Post.IsPublished)
                </td>
                <td>
                    @Html.ActionLink(item.Post.Title, "Details", "Post", new { postSlug = item.Post.Slug })
                </td>
                <td>
                    @(item.Post.Author.DisplayName ?? item.Post.Author.UserName)
                </td>
                <td>
                    @string.Join(", ", item.Post.PostCategories.Select(x => x.Category.Name).ToList())
                </td>
                <td>
                    @string.Join(", ", item.Post.PostTags.Select(x => x.Tag.Name).ToList())
                </td>
                <td>
                    @DateTimeUtil.ConvertUtcToMyTimeZone(item.Post.CreationDate)
                </td>
                <td>
                    @DateTimeUtil.ConvertUtcToMyTimeZone(item.Post.PublicationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelitem => item.CommentsTotal)
                </td>
                <td>
                    @if ((item.Post.Author.UserName == User.Identity.Name && Context.UserHasClaimPermission(PermissionClaims.EditOwnPosts)) || Context.UserHasClaimPermission(PermissionClaims.EditOtherUsersPosts))
                {
                        @Html.ActionLink("Edit", "Edit", "Post", new { id = item.Post.Id, Area = "Admin" })
                    }
                    @if ((item.Post.Author.UserName == User.Identity.Name && Context.UserHasClaimPermission(PermissionClaims.DeleteOwnPosts)) || (item.Post.Author.UserName != User.Identity.Name && Context.UserHasClaimPermission(PermissionClaims.DeleteOtherUsersPosts)))
                    {


                        <a asp-area="Admin" asp-controller="Post" asp-action="Delete" asp-route-id="@item.Post.Id" data-ajax="true" data-ajax-method="POST" data-ajax-confirm="Sure?" data-ajax-success="@("RemoveItemRow(" + item.Post.Id + ");")">Delete</a>

                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    function RemoveItemRow(itemId) {
        $('#item-row-' + itemId).hide();
    }

</script>

@await Component.InvokeAsync("Pager", new { currentPage = Model.CurrentPage, totalPages = Model.TotalPages, nextPageText = FujiyBlog.Web.Resources.Labels.NextPosts, previousPageText = FujiyBlog.Web.Resources.Labels.PreviousPosts })
