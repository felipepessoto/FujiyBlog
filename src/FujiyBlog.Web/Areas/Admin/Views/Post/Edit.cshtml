@model FujiyBlog.Web.Areas.Admin.ViewModels.AdminPostEdit

@{
    Layout = MVC.Admin.Shared.Views._Layout;
    ViewBag.Title = "Edit";
}
<!-- Load TinyMCE -->
<script type="text/javascript" src="@Url.Content(Links.Scripts.tiny_mce.jquery_tinymce_js)"></script>
<script type="text/javascript">
    $().ready(function () {
        $('#Post_Content').tinymce({
            // Location of TinyMCE script
            script_url: '@(Url.Content(Links.Scripts.tiny_mce.tiny_mce_js))',

            // General options
            theme: "advanced",
            plugins: "inlinepopups,fullscreen,contextmenu,emotions,table,iespell,advlink",

            // Theme options
            theme_advanced_buttons1: "fullscreen,code,|,cut,copy,paste,pastetext,pasteword,|,undo,redo,|,bold,italic,underline,strikethrough,|,blockquote,sub,sup,|,justifyleft,justifycenter,justifyright,|,bullist,numlist,outdent,indent",
            theme_advanced_buttons2: "iespell,link,unlink,removeformat,cleanup,charmap,emotions,|,formatselect,fontselect,fontsizeselect,|,forecolor,backcolor",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true
        });
    });
</script>
<!-- /TinyMCE -->

<h2>@(Model.Post.Id > 0 ? "Edit" : "Add") post</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Post</legend>

        @Html.HiddenFor(model => model.Post.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Post.Title)
            @Html.ValidationMessageFor(model => model.Post.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Post.Description)
            @Html.ValidationMessageFor(model => model.Post.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.Slug)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Post.Slug)
            @Html.ValidationMessageFor(model => model.Post.Slug)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.Content)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Post.Content)
            @Html.ValidationMessageFor(model => model.Post.Content)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.PublicationDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Post.PublicationDate)
            @Html.ValidationMessageFor(model => model.Post.PublicationDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.IsPublished)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Post.IsPublished)
            @Html.ValidationMessageFor(model => model.Post.IsPublished)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.IsCommentEnabled)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Post.IsCommentEnabled)
            @Html.ValidationMessageFor(model => model.Post.IsCommentEnabled)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.Categories)
        </div>
        <div class="editor-field">
            <ul id="categories-list">
            @foreach (FujiyBlog.Core.DomainObjects.Category category in Model.AllCategories)
            {
                <li><input type="checkbox" name="Post.selectedCategories" value="@category.Id" @(Model.Post.Categories.Any(x=>x.Id == category.Id) ? "checked=checked" : string.Empty) />@category.Name</li>
            }
            </ul>
        </div>

        <label for="new-category-name">Add new category</label>
        <input type="text" id="new-category-name" />
        <span id="new-category-name-error" class="field-validation-error" style="display:none"></span>
        
        <a href="javascript:void(0);" id="add-category">Add</a>

        <div class="editor-label">
            @Html.LabelFor(model => model.Post.Tags)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Post.Tags)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    $('#add-category').click(function () {

        if ($('#new-category-name').val() === '') {
            return;
        }
        $('#new-category-name-error').text('').hide();
        var callUrl = '@Url.Action(MVC.Admin.Post.AddCategory())';
        var callData = "NewCategory.Name=" + $('#new-category-name').val();
        $.ajax({
            type: "POST",
            url: callUrl,
            data: callData,
            success: function (response) {
                if (!response.errorMessage) {
                    var container = $('#categories-list');

                    var html = '<li><input checked=checked type="checkbox" name="Post.selectedCategories" value="' + response.Id + '" />' + response.Name + '</li>';
                    container.append($(html));
                }
                else {
                    $('#new-category-name-error').text(response.errorMessage).show();
                }
            },
            error: function () {
                $('#new-category-name-error').text("Error").show();
            }
        });
    });
</script>